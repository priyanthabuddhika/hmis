name: DEV-CI/CD

env:
  ARTIFACT_NAME: dev-hmis-build-jar-artifact

on:
  push:
    branches:
      - development
    paths-ignore:
      - '**/README.md'

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 11

      - name: Build with Maven
        run: mvn clean -B package -Pdev -DskipTests -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Upload WAR build as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name:  ${{ env.ARTIFACT_NAME }}
          path: target/*.war
          retention-days: 1
#      - name: Upload jar build as an Artifact
#        uses: fixpoint/azblob-upload-artifact@v4
#        with:
#          connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
#          name: ${{ env.ARTIFACT_NAME }}
#          path: target/*.jar

  upload:
    needs: ["build-test"]
    runs-on: ubuntu-latest

    steps:
      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
#      - name: Download JAR artifact
#        uses: fixpoint/azblob-download-artifact@v3
#        with:
#          connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
#          name: ${{ env.ARTIFACT_NAME }}
#          path: .

      - name: Add server host to the known ssh hosts
        run: |
          mkdir ~/.ssh || true
          touch ~/.ssh/known_hosts
          ssh-keyscan -t rsa ${{ secrets.DEV_HOST }} >> ~/.ssh/known_hosts

      - name: Generate ssh .pem file which used to connect server
        run: |
          echo "${{ secrets.DEV_SSH_KEY }}" > SERVER-KEY-PAIR.pem 
          chmod 400 SERVER-KEY-PAIR.pem

      - name: Upload artifacts to the server using rsync
        run: rsync -avL --progress -e "ssh -i SERVER-KEY-PAIR.pem" *.war azureuser@${{secrets.DEV_HOST}}:/home/azureuser/app/latest/

      - name: Clean generated files
        if: success() || failure()
        run: |
          ls
          rm -rf *.pem

#  deploy:
#    needs: ["upload"]
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: executing remote ssh commands using ssh key
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.DEV_HOST }}
#        username: azureuser
#        key: ${{ secrets.DEV_SSH_KEY }}
#        port: 22
#        script: |
#          set -xe
#          sudo service application stop
#          sudo cp /opt/app/*.jar /home/azureuser/app/old/application.jar
#          sudo cp /home/azureuser/app/latest/*.jar /opt/app/application.jar
#          sudo chown -R appuser:appuser /opt/app/application.jar
#          sudo chmod 500 /opt/app/application.jar
#          sudo service application start
#
#  validate:
#    needs: ["deploy"]
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v4
#
#    - name: Mark validate-service script file as executable
#      run: chmod +x .github/scripts/validate-service.sh
#
#    - name: Ensure Tomcat is running by making an HTTPS GET request to the default page
#      run: bash .github/scripts/validate-service.sh
#      env:
#        HOST: ${{ secrets.DEV_HOST }}
#
#  rollback:
#    needs: ['validate']
#    if: ${{ always() && (needs.validate.result == 'failure') }}
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: executing remote ssh commands using ssh key
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.DEV_HOST }}
#        username: azureuser
#        key: ${{ secrets.DEV_SSH_KEY }}
#        port: 22
#        script: |
#          set -xe
#          sudo service application stop
#          sudo rm -rf /opt/app/*.jar
#          sudo cp /home/azureuser/app/old/*.jar /opt/app/application.jar
#          sudo chown -R appuser:appuser /opt/app/application.jar
#          sudo chmod 500 /opt/app/application.jar
#          sudo service application start
